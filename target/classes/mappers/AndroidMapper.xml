<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="yjc.wdb.mapper.AndroidMapper">

	<insert id="insertCoupon_hold">
		insert into coupon_hold
		(USER_ID, COUPON_CODE, COUPONHOLD_USE_AT, COUPONHOLD_DE)
		values (#{user_id}, #{coupon_code}, 'no', date_format(now(), '%Y-%m-%d'));
	</insert>

	<!-- 구매목록 -->

	<resultMap id="billOne" type="java.util.HashMap">
		<result property="goods_nm" column="goods_nm" />
		<result property="purchgoods_qy" column="purchgoods_qy" />
		<result property="COUPON_DSCNT" column="COUPON_DSCNT" />
		<result property="price" column="price" />
	</resultMap>

	<resultMap id="recommandProduct" type="java.util.HashMap">
		<result property="goods_code" column="goods_code" />
		<result property="goods_nm" column="goods_nm" />
		<result property="goods_pc" column="goods_pc" />
	</resultMap>

	<resultMap id="settleInfo" type="java.util.HashMap">
		<result property="bill_code" column="bill_code" />
		<result property="setle_mth_code" column="setle_mth_code" />
		<result property="setle_mth_nm" column="setle_mth_nm" />
		<result property="stprc" column="stprc" />
	</resultMap>


	<!-- APP -->
	<select id="billList" resultType="BillVO">
		select * from bill where
		user_id = #{user_id} and date(bill.BILL_ISSU_DE) >=
		date(subdate(curDate(), INTERVAL #{day} DAY))
	</select>

	<select id="billOne" resultMap="billOne">
		select g.GOODS_NM as goods_nm,
		pg.purchsgoods_qy as purchsgoods_qy, if(isnull(pg.coupon_code), 'X',
		c.COUPON_DSCNT) as COUPON_DSCNT,
		sum(g.GOODS_PC *
		pg.PURCHSGOODS_QY -
		if(isnull(pg.COUPON_CODE), 0, if(c.COUPON_DSCNT
		like '%@%' escape '@',
		g.GOODS_PC * (trim(trailing '%' from
		c.COUPON_DSCNT)/100),
		c.COUPON_DSCNT))) as price
		from purchase_goods pg left outer join
		coupon c on pg.COUPON_CODE =
		c.COUPON_CODE, goods g, bill b
		where
		g.goods_code = pg.goods_code and b.BILL_CODE = pg.BILL_CODE and
		pg.bill_code = #{bill_code}
		group by pg.bill_code, pg.goods_code
	</select>

	<select id="settleInfo" resultMap="settleInfo">
		select b.BILL_CODE as
		bill_code, sm.setle_mth_code as setle_mth_code, sm.setle_mth_nm as
		setle_mth_nm, si.stprc as stprc
		from bill b, settlement_method sm,
		settlement_infomation si
		where b.user_id = #{user_id} and
		sm.setle_mth_code = si.setle_mth_code and b.BILL_CODE = si.bill_code
		and b.bill_code = #{bill_code}
		order by b.bill_code
	</select>


	<!-- 추천상품 -->

	<select id="recommandProduct" resultMap="recommandProduct">
		select
		g.GOODS_CODE as
		goods_code, g.GOODS_NM as goods_nm, g.GOODS_PC as goods_pc
		from
		purchase_goods pg, goods g, user u, bill b
		where g.GOODS_CODE =
		pg.GOODS_CODE and u.user_id = b.user_id and
		pg.BILL_CODE = b.BILL_CODE
		and
		floor((year(curDate()) - date_format(u.USER_BRTHDY, '%Y') + 1)/10)
		=
		(select floor((year(curDate()) - date_format(user.USER_BRTHDY, '%Y')
		+ 1)/10)
		from
		user where user_id = #{user_id}) and
		u.USER_SEXDSTN =
		(select
		user.USER_SEXDSTN from user where user_id = #{user_id}) and
		u.USER_MRRG_AT = (select user.USER_MRRG_AT from user where user_id =
		#{user_id})
		group by g.GOODS_CODE, u.USER_SEXDSTN,
		floor((year(curDate()) - date_format(u.USER_BRTHDY, '%Y') + 1)/10)
		order by sum(pg.PURCHSGOODS_QY) desc
		limit 0, 10
	</select>


	<!-- 쿠폰 바구니 들고있는 목록 -->
	<select resultType="CouponVO" id="couponList">
		select * from coupon_hold ch,
		coupon c where
		ch.user_id = #{user_id} and
		ch.COUPONHOLD_USE_AT = 'no'
		and ch.coupon_code = c.coupon_code and
		c.COUPON_END_DE >= now()
	</select>

	<delete id="delCouponBasket">
		delete from coupon_hold
		where user_id = #{user_id}
		and
		coupon_code = #{coupon_code};

	</delete>


	<select id="productSearch" resultType="goodsVO">

		select * from goods where
		goods_nm like concat('%', #{productName}, '%');
	</select>

	<!-- 고객에게 쿠폰 전송 -->
<select id="selectSendAndroidCoupon" resultType="CouponVO" parameterType="java.util.HashMap">
select
	*
from
	coupon
where
	COUPON_CODE IN
				<foreach collection="coupon_code_Array" item="item" 
					index="index" separator="," open="(" close=")">
					
					#{item.coupon_code}
				</foreach>  
order by rand()
limit 0,1
</select>
	
<select id="scanCoupon_hold" resultType="java.lang.Integer" parameterType="java.util.HashMap">

select
	count(*)
from 
	coupon_hold
where
	USER_ID = #{user_id}
and
	COUPONHOLD_USE_AT = 'no'
and
	COUPON_CODE IN
				<foreach collection="coupon_code_Array" item="item" 
					index="index" separator="," open="(" close=")">
					
					#{item.coupon_code}
				</foreach>  
</select>

<select id="TileCoupon_code" resultType="java.util.HashMap" parameterType="java.util.HashMap">
select
	coupon_code
from 
	coupon_detailcategory_creation
where
	DETAILCTGRY_CODE =	(
							select
								DETAILCTGRY_CODE
							from
								detail_category_location
							where
								TILE_CODE =	(
												select 
													TILE_CODE
												from 
													tile
												where 
													BEACON_CODE =	(
																		select 
																			BEACON_CODE 
																		from 
																			beacon
																		where
																			BEACON_MJR = #{beacon_mjr}
																		and
																			BEACON_MNR = #{beacon_mnr}
																	)
											)
						)


UNION ALL


select
	COUPON_CODE
from 
	coupon_goods_creation
where
	GOODS_CODE IN	(
						select
							GOODS_CODE
						from
							goods
						where
							DETAILCTGRY_CODE = (
													select
														DETAILCTGRY_CODE
													from
														detail_category_location
													where
														TILE_CODE =	(
																		select 
																			TILE_CODE
																		from 
																			tile
																		where 
																			BEACON_CODE =	(
																								select 
																									BEACON_CODE 
																								from 
																									beacon
																								where
																									BEACON_MJR = #{beacon_mjr}
																								and
																									BEACON_MNR = #{beacon_mnr}
																							)
																	)
												)
					)
</select>


	<select id="eventList" resultType="java.util.HashMap">
		select e.bbsctt_code as
		bbsctt_code, date_format(e.event_begin_de, '%Y-%m-%d') as
		event_begin_de, date_format(e.event_end_de, '%Y-%m-%d') as
		event_end_de,
		b.bbsctt_sj as bbsctt_sj from event e, bbsctt b where e.bbsctt_code =
		b.bbsctt_code and e.event_end_de >= now()
	</select>


	<select id="eventOne" resultType="java.util.HashMap">
		select e.bbsctt_code as
		bbsctt_code, date_format(e.event_begin_de, '%Y-%m-%d') as
		event_begin_de, date_format(e.event_end_de, '%Y-%m-%d') as
		event_end_de,
		b.bbsctt_sj as bbsctt_sj,
		b.bbsctt_cn as bbsctt_cn from event e, bbsctt b where
		e.bbsctt_code =
		b.bbsctt_code and e.bbsctt_code = #{bbsctt_code};

	</select>




</mapper>